@using Flafel.Applications.Dtos.CrewDtos
@using Flafel.Applications.Features.CrewFeature.Commands.CreateCrewTitle
@using Flafel.Applications.Features.CrewFeature.Query.GetCrewTitleById
@inherits FormControlBase<CrewTitleDto>
@inject ISender sender

<TitledForm OnClick="@CollapseForm" Header="مرحباً بعودتك!" Title="قم بتسجيل الدخول من جديد للتطبيق." IsLoading="@IsLoading" ErrorMessage="@ErrorMessage">
	<EditForm Model="@createCrewTitleCommand" OnValidSubmit="@SubmitFormHandler">
		<FluentValidationValidator />
		<CenterVerticalWrapperUI>
			<InputsControlsWrapperUI>
				<TextInputUI FontAwesomeIcon="fa-solid fa-user" Label="اسم المستخدم*" Placeholder="ادخل اسم المستخدم" @bind-Value="createCrewTitleCommand.CrewTitle.Name" ValidationFor="@(() => createCrewTitleCommand.CrewTitle.Name)" />
			</InputsControlsWrapperUI>
			<MainButtonUI IsSubmit="true">حفظ</MainButtonUI>
		</CenterVerticalWrapperUI>
	</EditForm>
</TitledForm>

@code {

	private CreateCrewTitleCommand createCrewTitleCommand = new CreateCrewTitleCommand(new AddNewCrewTitleRequestDto());

	protected override async Task OnInit()
	{
		// var getCrewTitleByIdQuery = new GetCrewTitleByIdQuery(Id);
		// var result = await sender.Send(getCrewTitleByIdQuery);
		// editCrewTitleCommand.CrewTitle.Id = Id;
		// editCrewTitleCommand.CrewTitle.Name = result.CrewTitle.Name;
	}

	protected override async Task OnSubmit()
	{
		var result = await sender.Send(createCrewTitleCommand);
		var crewTitle = createCrewTitleCommand.CrewTitle;
		await OnAfterSubmit.InvokeAsync((new CrewTitleDto()
			{
				Id = result.Id,
				Name = crewTitle.Name
			}, true));
	}
}
